# This is a basic workflow that is manually triggered

name: Manual workflow

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      clustername:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'Cluster name'
        # Default value if no value is explicitly provided
        default: 'cluster'
        # Input has to be provided for the workflow to run
        required: true
        # The data type of the input
        type: string

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "greet"
  add-cluster-yaml:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - name: Checkout template
      uses: actions/checkout@v2
    # Runs a single command using the runners shell
    - name: Generate cluster claim
      run: |
        cp demo/template/cluster-claim-template.yaml demo/clusters/${{ inputs.clustername }}-cluster.yaml
    - name: Update cluster claim
      uses: MathieuSoysal/replace-string-in-file@v1.0.0
      with:
        file: demo/clusters/${{ inputs.clustername }}-cluster.yaml
        old-string: "{{cluster-name}}"
        new-string: "${{ inputs.clustername }}"
    - name: Setup git config
      run: |
        # setup the username and email. I tend to use 'GitHub Actions Bot' with no email by default
        git config user.name "GitHub Actions Bot"
        git config user.email "<>"
    - name: Commit file
      run: |
        git add demo/clusters/${{ inputs.clustername }}-cluster.yaml
        git commit -m "Created cluster claim"
        git push origin master
